<!DOCTYPE html>
<html>
	<script src="https://kit.fontawesome.com/eefb62ef30.js" crossorigin="anonymous"></script>
	
	<head>
			<link rel = "stylesheet" href = "src/style.css">
	</head>
<body>
        <!-- template for tasks -->
              <div class = "task" id = "example" style="display: none;">
              <p class="task-title"> {title}</p>
              <div class = "task-details">
                <div class="task-info">
                  <div class="avatar"></div>
                    <p class="task-code">
                      {tag}
                    </p>
                  </div>
                  <div class="task-status">
                    <div class="task-type">
                      <i class="fa fa-bookmark"></i>
                    </div>
                    <div class="task-priority">
                      <i class="fa fa-arrow-up"></i>
                    </div>
                  </div>
              </div>
          </div
          >
	<div class="page">
    <!-- nav bar -->
		<aside> 
			<div class = "actions">
				<button class= "icon-bar" id="searchTask">
					<i class="fa fa-search fa-2x"></i>
				</button>				
				<button class = "icon-bar" id="addTask">
					<i class="fa fa-plus fa-2x"></i>
				</button>
        <button class = "icon-bar" id ="removeTask">
          <i class="fa fa-minus fa-2x"></i>
        </button>
			</div>
			<div class="avatar"></div>
		</aside>
		<main>
			<h1>Jira Board</h1>
			<div class = "board">
				<section>
					<h5 class="section-title">Backlog <span>4</span></h5>
					<div class="tasks"></div> 
				</section>
				<section>
					<h5 class="section-title">
						Selected for development <span>4</span>
					</h5>
					<div class="tasks"></div>
				</section>
				<section>
            <h5 class="section-title">In progress <span>4</span></h5>
            <div class="tasks"></div>
          </section>

          <section>
            <h5 class="section-title">Done <span>4</span></h5>
            <div class="tasks"></div>
          </section>
			</div>
		</main>
	</div>
	<script type="module" src="src/index.js"></script>
</body>
</html>

var task_list = []; // array for all tasks
const backlog = document.querySelector(".board section:first-child .tasks");
const addTaskButton = document.getElementById("addTask");
const removeTaskButton = document.getElementById("removeTask");
document.querySelectorAll("section").forEach((div) =>{
	div.style.cssText ="background-color :#ff0000: border: 1px solid #000";
});
// create the new task
function compileTaskTemplate(title, tag) {
  let newDiv = document.createElement("div");
  newDiv = document.getElementById("example");
  const compileTemplate = newDiv.outerHTML;
  const div = document.createElement("div");
  div.innerHTML = compileTemplate
  .replace("{title}", title)
  .replace("{tag}",tag);

 return div.firstElementChild;
}
//remove task
function removeTask(event)
{
  
  event.stopPropagation();
  let task = task_list.pop();
  if(task == undefined)
    return;
  if( task[1] !== undefined)
    task[1].className += " fade-out";
  setTimeout(() => {
    backlog.removeChild(task[1]);
  }, 2000);

}

removeTaskButton.addEventListener("click", removeTask);

function addTask(event) {
  event.stopPropagation();
  const task = compileTaskTemplate("new task", "urgent-1");
  task.style.display = "block";
  task.className +=" fade-in";
  let info = [backlog, task];
  task_list.push(info);
    backlog.appendChild(task);
  
}

addTaskButton.addEventListener("click", addTask);

function rotateFunction(event)
{
  event.stopPropagation();
  addTaskButton.className +=" rotate";
  setTimeout(() => {
    addTaskButton.classList.remove("rotate");
  } , 1000);
}

addTaskButton.addEventListener("click", rotateFunction);

*
{
	margin:0;
	padding: 0;
}
html, body
{
	height : 100%;
	background:black;
}
.page
{
	height: 100%;
	display: flex;
	/*align-items: stretch;*/
}
aside
{
	
	padding: 1em;
	display: flex;
	justify-content: space-between;
	background :red;
	flex-direction: column;
}
.actions
{

	display: flex;
	flex-direction: column;
}
aside button{
	background: transparent;
	border: 0 none;
	color :white;
	outline:none;
}
.avatar
{
	background-position: 50% 50%;
	background-repeat: no-repeat;
	background-size: cover;
	width: 3em;
	background-image: url("../assets/avatar.png");
	border-radius: 100%;
	height: 3em;

}
.icon-bar {
  cursor: pointer;
  width: 100%;
  margin-bottom: 1.5em;
  display: flex;
  align-items: center;
  justify-content: center;
}
.icon-bar:hover {
  color: black;
  

}
.rotate
{
	display: inline-block;
  animation: spin 1s infinite linear forwards;
}
@keyframes spin{
	100%{
		transform: rotateZ(360deg);
	}
}
main{
	overflow: hidden;
	padding: 3em;
	display: flex;
	flex-direction: column;
	width: 100%;
}
h1{
	margin-bottom: 1em;
	color: white;
}
.board{
	display: flex;
	height: 100%;
		
	justify-content: space-around;
}
section{
	width: 25%;
	background:#f4f5f7;
	flex:1;
	margin: 0.8em;
	height: 100%;
	padding-top: 0.75em;
	overflow: auto;
	
}
h5.section-title{
	padding: 1em;
	text-transform: uppercase;
	font-weight: 500;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.tasks{
	overflow: visible;


}
.tasks:empty:before{
	color:red;
	content: "All clear!";
	font-weight: bold;
	line-height: 10vh;
	text-align: center;
}
.task{
	display: block;
	background: :#ffffff;
	padding: 1em;
	margin-bottom: 1em;
	box-shadow: 0 1px 2px 0 rgba(0, 30, 66, 0.25);
}
.task:hover{
	background-color: #ebecf0;
}

.task-title {
  margin-bottom: 1.5em;
}

.task-details {
  display: flex;
  justify-content: space-between;
  font-size: 0.875em;
}

.task-info {
  display: flex;
  align-items: center;
}

.task-info .avatar {
  height: 1.5em;
  width: 1.5em;
  box-shadow: 0 0 0 2px #fff;
}

.task-code {
  margin-left: 0.5em;
}

.task-status {
  display: flex;
}

.task-status div {
  margin-right: 0.5em;
}

.task-status div:last-child {
  margin-right: 0;
}

.task-status .task-type {
  color: #57a55a;
}

.task-status .task-priority {
  color: #e9494a;
}
.fade-in {
  animation: fadeIn ease 2s;
  -webkit-animation: fadeIn ease 2s;
  -moz-animation: fadeIn ease 2s;
  -o-animation: fadeIn ease 2s;
  -ms-animation: fadeIn ease 2s;
}
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.fade-out {
  animation: fadeOut ease 2s;
  -webkit-animation: fadeOut ease 2s;
  -moz-animation: fadeOut ease 2s;
  -o-animation: fadeOut ease 2s;
  -ms-animation: fadeOut ease 2s;
}
@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
